#!/usr/bin/env python3

"""
Initializing code for string methods applied to 2D GL system
"""

from config import dev_number, N, dx, multicomponent, default_relaxation_step_number

def generate_header(dev_number, N, dx, multicomponent):    
    
    multicomponent_str = "" if multicomponent else "//"

    config_cuh = (
        f"""#ifndef CONFIG_CUH                                                                      \n"""
        f"""#define CONFIG_CUH                                                                      \n"""
        f"""/*****************************                                                          \n"""
        f""" * Autogenerated by config.py                                                           \n""" 
        f""" *                                                                                      \n"""
        f""" * DO NOT MODIFY!                                                                       \n"""
        f""" ****************************/                                                          \n"""
        f"""                                                                                        \n"""
        f"""#include <string>                                                                       \n"""
        f"""                                                                                        \n"""
        f"""#include "real.cuh"                                                                     \n"""
        f"""                                                                                        \n"""
        f"""// Device number                                                                        \n"""                                                                                                                                                        
        f"""const int devNumber = {dev_number};                                                     \n"""                                                                                                                                             
        f"""                                                                                        \n"""     
        f"""// Multicomponent                                                                       \n"""                                                                                                                                                        
        f"""{multicomponent_str}#define MULTICOMPONENT                                              \n"""                                                                                                                                             
        f"""                                                                                        \n"""                                                                
        f"""// Number of point for side                                                             \n"""                                            
        f"""constexpr int N = {N};                                                                  \n""" 
        f"""                                                                                        \n""" 
        f"""#ifdef DOUBLE_PRECISION                                                                 \n""" 
        f"""constexpr int blockSizeX = 512;                                                         \n""" 
        f"""#else                                                                                   \n""" 
        f"""constexpr int blockSizeX = 1024;                                                        \n""" 
        f"""#endif                                                                                  \n""" 
        f"""                                                                                        \n""" 
        f"""constexpr int gridSizeX = (int)((N*N)/blockSizeX + 1);                                  \n"""
        f"""constexpr real dx = {dx};                                                               \n"""                                                                                                                                             
        f"""                                                                                        \n""" 
        f"""constexpr int default_relaxation_step_number = {default_relaxation_step_number};        \n"""                                                                                                                                             
        f"""                                                                                        \n"""
        f"""#endif // CONFIG_CUH                                                                    \n"""
        )

    config_cuh_file = open("./src/config.cuh","w+")
    config_cuh_file.write(config_cuh)
    config_cuh_file.close()    
    
print("Writing header file....", end="")
generate_header(dev_number, N, dx, multicomponent)    
print("done.")
